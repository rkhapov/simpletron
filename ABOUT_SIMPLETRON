Simpletron (здесь и далее smp) - простой компьютер с очень простой архитектурой.
smp состоит из:
    1) Процессор
    2) Самая обычная RAM-память на 1МБ
    3) Устройства ввода-вывода (стандартный поток ввода и вывода)

Опишем процессор:

Процссор имеет 4 составляющие, доступные для пользователя:
    а) Регистры общего назначения 1 и 2 (здесь и далее @1, @2). Зармер каждого - 1 байт
    б) Регистр-указатель на следующую инструкцию ip. Размер 2 байта
    в) Флаг завершения роботы - halt. Как только он становится равен 1, компьютер прекращает свою работу

Остановимся на событиях, при которых smp прекращает свою работу:
    1) флаг halt установился в 1 (см. инструкции ниже)
    2) Деление на 0
    3) Переход по несуществующему адресу
    4) Встреча неизвестной инструкции

Арфитектура легко расширяема, достаточно добавить в процессор новые инструкции и написать обработчик для них.
В общем это всё :)


Описание ассемблера для smp

Все инструкции делятся на:

В исходном коде могут встречатся следующие конструкции:

    1) инструкции - команды для процессора. Иногда имеют параметры. Пример: add
    2) Константы. Записываются в память вместо инструкций

Инструкции могут иметь параметры, которые могут записываться так:
    а) Константы - #N - шестнадцатиричное число N (вообще, все числа тут шестнадцатиричные)
    б) Адреса $N - адрес N

а) "Название ещё не придумал" инструкции:
    1) halt - устанавливает флаг halt в 1
    2) read - читает значение с клавиатуры в @1
    3) write - выводит значение @1 на экран

    Размер каждой инструкции - 1 байт

б) Инструкции управления данными:
    1) mov12, mov21 - перевод значения регистра @1 (@2) в @2 (@1)
        Размер - 1 байт
    2) movc1 <#N>, movc2 <#N> - Перевод числа N в регистр @1 (@2)
        Размер - 2 байта (инструкция + константа)
    3) load <%N> - загрузка в @1 значения из памяти по адресу N
        Размер - 3 байта (инструкция + адрес)
    4) store <%N> - запись в память значения @1 по адресу N
        Размер - 3 байта (инструкция + адрес)

в) Инструкции управления потоком выполнения:
    1) jmp <%N> - переход на адрес N (смена значения ip на N)
    2) je <%N> - переход на адрес N, если @1 == @2
    3) jl <%N> - переход на адрес N, если @1 < @2
        Размер - 3 байта (инструкция + адрес)

г) Арифметические инструкции:
    1) add - сложение @1 и @2
    2) sub - --||--
    3) mul - --||--
    4) div - --||--
        Размер - 1 байт

Так же исходный код может содержать комментарии. Комментарии начинаются с символа ! и идет ко конца строки

Пример программы для сложения чисел:

read  ! Чтение значения с клавиатруы и запись его в @1
mov12 ! @2 = @1
read
add   ! @1 = @1 + @2
write ! вывод @1
halt  ! Завершение работы

Та же прогрмма, но записанная константами - в машиннх кодах
(заниматься этим - полное извращение)

#1
#3
#1
#12
#2
#0
